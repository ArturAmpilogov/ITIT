name: 'Spark optimised sorting'
description: 'Apache Spark is an application for fast processing of distrubuted datasets.
              Spark, before processing, divides the large data on smaller parts and distributes them among computer nodes called "workers".
              Sorting requires memory jump by reference to get the actual values for comparison. 
              Refernces can lead to a chain of jumps, and each call is a slow operation.
              Spark solution: Store small record prefix (number or string) near a record reference. 
              CPU reads prefixes and references in a contigous block of memory and caches them in the fast L1, L2, L3 on chip memory levels.
              At first step, the pre-sort method is done by prefixes, then the records can be sorted fully using reference jumps. 
              Data movement between CPU and main memory is drastically reduced.
links: 
- {name: 'Deep Dive into Project Tungsten Bringing Spark Closer to Bare Metal -Josh Rosen (Databricks)', url: 'https://youtu.be/5ajs8EIPWGI?t=1134'}
- {name: 'Deep Dive: Apache Spark Memory Management', url: 'https://youtu.be/dPHrykZL8Cg?t=1211' }
